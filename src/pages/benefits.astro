---
import Layout from '../layouts/Layout.astro';
import DisplayTitle from '../components/DisplayTitle.astro';
---

<Layout title="EU Reforms - Benefits by Country">
  <main class="container mx-auto max-w-6xl px-4 py-8">
    <DisplayTitle title="How EU Reforms Benefit Each Country" />

    <div class="mb-10 text-xl" style="color: var(--color-text-secondary);">
      The proposed reforms for European integration offer different benefits for each country. Discover what your country can gain from these reforms.
    </div>

    <div class="benefits-layout flex flex-col md:flex-row gap-6 md:gap-8">
      <!-- Country sidebar - always visible -->
      <div class="country-sidebar w-full md:w-72 flex-shrink-0">
        <div class="sticky top-4">
          <div class="p-4 rounded-t-xl transition-colors duration-300" style="background-color: var(--color-bg-secondary); border-bottom: 1px solid var(--color-border);">
            <div class="relative">
              <input 
                type="text" 
                id="country-search" 
                placeholder="Find your country..." 
                class="w-full p-3 pl-9 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600 text-sm transition-colors duration-300"
                style="background-color: var(--color-bg-primary); color: var(--color-text-primary); border: 1px solid var(--color-border);"
              />
              <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" style="color: var(--color-text-secondary);">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                </svg>
              </div>
            </div>
          </div>
          
          <div class="country-tabs p-3 rounded-b-xl transition-colors duration-300" style="background-color: var(--color-bg-secondary);">
            <ul id="country-list" style="color: var(--color-text-primary)">
              <!-- Country options will be populated by JavaScript -->
            </ul>
          </div>
        </div>
      </div>
      
      <!-- Benefits content area -->
      <div class="benefits-content flex-grow">
        <div id="benefits-container">
          <div id="germany-benefits" class="country-benefits hidden">
            <div class="country-benefits-header px-6 py-5 rounded-t-xl transition-colors duration-300" style="background-color: var(--color-accent-primary); opacity: 0.2; border-bottom: 1px solid var(--color-border);">
              <h2 class="text-2xl md:text-3xl font-bold" style="color: var(--color-text-primary);">Benefits for Germany</h2>
            </div>
            <div class="country-benefits-content p-6 rounded-b-xl transition-colors duration-300" style="background-color: var(--color-bg-secondary);">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="p-6 rounded-xl shadow-md transition-colors duration-300" style="background-color: var(--color-bg-primary); border: 1px solid var(--color-border); opacity: 0.95;">
                  <h3 class="text-xl font-bold mb-3" style="color: var(--color-text-primary);">Leading the European Robotics Revolution</h3>
                  <p style="color: var(--color-text-secondary);">Transform Germany's automotive industry strength into robotics leadership, creating a new economic powerhouse that leverages existing industrial expertise.</p>
                </div>
                <div class="p-6 rounded-xl shadow-md transition-colors duration-300" style="background-color: var(--color-bg-primary); border: 1px solid var(--color-border); opacity: 0.95;">
                  <h3 class="text-xl font-bold mb-3" style="color: var(--color-text-primary);">Enhanced Skilled Worker Pool</h3>
                  <p style="color: var(--color-text-secondary);">Benefit from easier movement of skilled professionals with English integration, addressing Germany's demographic challenges and labor shortages.</p>
                </div>
                <div class="p-6 rounded-xl shadow-md transition-colors duration-300" style="background-color: var(--color-bg-primary); border: 1px solid var(--color-border); opacity: 0.95;">
                  <h3 class="text-xl font-bold mb-3" style="color: var(--color-text-primary);">Digital Government Efficiency</h3>
                  <p style="color: var(--color-text-secondary);">Lead in the development of shared eGovernment platforms that dramatically reduce administrative costs while improving service delivery.</p>
                </div>
                <div class="p-6 rounded-xl shadow-md transition-colors duration-300" style="background-color: var(--color-bg-primary); border: 1px solid var(--color-border); opacity: 0.95;">
                  <h3 class="text-xl font-bold mb-3" style="color: var(--color-text-primary);">Strategic Position in European Logistics</h3>
                  <p style="color: var(--color-text-secondary);">Leverage Germany's central position with unified logistics systems, strengthening its role as Europe's transportation and distribution hub.</p>
                </div>
              </div>
            </div>
          </div>

          <div id="france-benefits" class="country-benefits hidden">
            <div class="country-benefits-header px-6 py-5 bg-blue-900/20 rounded-t-xl border-b border-blue-800/50">
              <h2 class="text-2xl md:text-3xl font-bold text-white">Benefits for France</h2>
            </div>
            <div class="country-benefits-content p-6 bg-gray-900 rounded-b-xl">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="bg-blue-900/30 p-6 rounded-xl shadow-md border border-blue-800/30">
                  <h3 class="text-xl font-bold text-white mb-3">Cultural Leadership in Digital Europe</h3>
                  <p class="text-gray-300">Position France as a cultural leader in the new European digital landscape, influencing development of European media and cultural initiatives.</p>
                </div>
                <div class="bg-blue-900/30 p-6 rounded-xl shadow-md border border-blue-800/30">
                  <h3 class="text-xl font-bold text-white mb-3">Energy System Integration</h3>
                  <p class="text-gray-300">Extend France's nuclear expertise across Europe through integrated energy systems, while developing new renewable technologies.</p>
                </div>
                <div class="bg-blue-900/30 p-6 rounded-xl shadow-md border border-blue-800/30">
                  <h3 class="text-xl font-bold text-white mb-3">Enhanced European Defense Cooperation</h3>
                  <p class="text-gray-300">Lead development of joint European defense capabilities supported by improved communication through language integration.</p>
                </div>
                <div class="bg-blue-900/30 p-6 rounded-xl shadow-md border border-blue-800/30">
                  <h3 class="text-xl font-bold text-white mb-3">Agricultural Modernization</h3>
                  <p class="text-gray-300">Combine France's agricultural strength with autonomous farming technology to create the world's most advanced sustainable food production system.</p>
                </div>
              </div>
            </div>
          </div>

          <div id="poland-benefits" class="country-benefits hidden">
            <div class="country-benefits-header px-6 py-5 bg-blue-900/20 rounded-t-xl border-b border-blue-800/50">
              <h2 class="text-2xl md:text-3xl font-bold text-white">Benefits for Poland</h2>
            </div>
            <div class="country-benefits-content p-6 bg-gray-900 rounded-b-xl">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="bg-blue-900/30 p-6 rounded-xl shadow-md border border-blue-800/30">
                  <h3 class="text-xl font-bold text-white mb-3">Software Development Hub</h3>
                  <p class="text-gray-300">Leverage Poland's growing software talent to become Europe's robotics software development center, creating high-value tech jobs.</p>
                </div>
                <div class="bg-blue-900/30 p-6 rounded-xl shadow-md border border-blue-800/30">
                  <h3 class="text-xl font-bold text-white mb-3">Logistics Equalization</h3>
                  <p class="text-gray-300">Overcome geographic disadvantages through unified logistics networks that put Polish businesses on equal footing with Western Europe.</p>
                </div>
                <div class="bg-blue-900/30 p-6 rounded-xl shadow-md border border-blue-800/30">
                  <h3 class="text-xl font-bold text-white mb-3">Enhanced Eastern Partnership</h3>
                  <p class="text-gray-300">Strengthen Poland's role as a bridge between the EU and Eastern neighbors, particularly Ukraine, through improved logistics and digital integration.</p>
                </div>
                <div class="bg-blue-900/30 p-6 rounded-xl shadow-md border border-blue-800/30">
                  <h3 class="text-xl font-bold text-white mb-3">Accelerated Economic Growth</h3>
                  <p class="text-gray-300">Speed convergence with Western European economies through improved labor mobility, reduced administrative barriers, and better access to EU markets.</p>
                </div>
              </div>
            </div>
          </div>

          <!-- Template for other countries -->
          <div id="default-benefits" class="country-benefits hidden">
            <div class="country-benefits-header px-6 py-5 bg-blue-900/20 rounded-t-xl border-b border-blue-800/50">
              <h2 class="text-2xl md:text-3xl font-bold text-white">Benefits for Your Country</h2>
            </div>
            <div class="country-benefits-content p-6 bg-gray-900 rounded-b-xl">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="bg-blue-900/30 p-6 rounded-xl shadow-md border border-blue-800/30">
                  <h3 class="text-xl font-bold text-white mb-3">Economic Integration</h3>
                  <p class="text-gray-300">Benefit from reduced barriers to trade and enhanced economic cooperation across the EU.</p>
                </div>
                <div class="bg-blue-900/30 p-6 rounded-xl shadow-md border border-blue-800/30">
                  <h3 class="text-xl font-bold text-white mb-3">Digital Transformation</h3>
                  <p class="text-gray-300">Access unified digital government services and infrastructure, reducing administrative costs.</p>
                </div>
                <div class="bg-blue-900/30 p-6 rounded-xl shadow-md border border-blue-800/30">
                  <h3 class="text-xl font-bold text-white mb-3">Enhanced Mobility</h3>
                  <p class="text-gray-300">Easier movement of goods and people through unified logistics networks and language integration.</p>
                </div>
                <div class="bg-blue-900/30 p-6 rounded-xl shadow-md border border-blue-800/30">
                  <h3 class="text-xl font-bold text-white mb-3">Shared Innovation</h3>
                  <p class="text-gray-300">Participate in joint development of advanced technologies and services like healthcare and education.</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<style>
  /* Sticky sidebar on scroll */
  .country-sidebar .sticky {
    position: sticky;
    top: 1rem;
  }
  
  /* Search input styling */
  #country-search {
    transition: all 0.2s ease-in-out;
  }
  
  #country-search:focus {
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.5);
  }
  
  /* Country tab styling */
  #country-list li {
    position: relative;
    padding: 0.35rem 0.5rem;
    margin-bottom: 0.25rem;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 0.2s ease;
    opacity: 0.9;
    font-size: 0.9rem;
    border: 1px solid transparent;
  }
  
  .country-wrapper {
    display: flex;
    align-items: center;
    padding: 0.25rem 0.5rem;
    border-radius: 0.35rem;
  }
  
  #country-list li:hover {
    opacity: 1;
    border-color: rgba(59, 130, 246, 0.2);
  }
  
  #country-list li:hover .country-wrapper {
    background-color: rgba(59, 130, 246, 0.15);
  }
  
  /* Active tab styling */
  #country-list li.active {
    position: relative;
    opacity: 1;
    font-weight: 500;
    border-color: rgba(59, 130, 246, 0.6);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    border-left-width: 3px;
  }
  
  #country-list li.active .country-wrapper {
    background-color: rgba(59, 130, 246, 0.25);
  }
  
  #country-list li.active::after {
    content: '';
    position: absolute;
    right: -10px;
    top: 50%;
    transform: translateY(-50%);
    width: 0;
    height: 0;
    border-top: 8px solid transparent;
    border-bottom: 8px solid transparent;
    border-left: 10px solid rgba(59, 130, 246, 0.5);
    filter: drop-shadow(0 1px 2px rgba(0,0,0,0.3));
  }
  
  /* Filtered items styling */
  #country-list li:not(.matches-filter):not(.active) {
    opacity: 0.4;
  }
  
  #country-list li.matches-filter {
    opacity: 1;
    font-weight: 500;
    border-color: rgba(59, 130, 246, 0.3);
  }
  
  #country-list li.matches-filter .country-wrapper {
    background-color: rgba(59, 130, 246, 0.15);
  }
  
  /* When filtering, don't dim the active item */
  #country-list li.active:not(.matches-filter) {
    opacity: 0.8;
  }
  
  /* Make sure active items always have their styling */
  #country-list li.active {
    font-weight: 600;
    border-color: rgba(59, 130, 246, 0.5) !important;
  }
  
  #country-list li.active .country-wrapper {
    background-color: rgba(59, 130, 246, 0.25) !important;
  }
  
  /* Suggested country styling */
  #country-list li.suggested {
    border-left: 3px solid rgba(59, 130, 246, 0.7);
    background-color: rgba(59, 130, 246, 0.1);
    padding-left: 0.85rem;
    margin-bottom: 0.75rem;
  }
  
  #country-list li.suggested::before {
    content: '•';
    color: rgba(59, 130, 246, 0.8);
    position: absolute;
    right: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
  }
  
  /* Country table styling */
  .country-table {
    width: 100%;
    border-collapse: collapse;
    table-layout: fixed;
  }
  
  /* Flag cell styling */
  .flag-cell {
    width: 30px;
    vertical-align: middle;
    padding: 0;
  }
  
  /* Spacer cell */
  .spacer-cell {
    width: 29px;
    min-width: 29px;
  }
  
  /* Name cell styling */
  .name-cell {
    vertical-align: middle;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  /* Flag image styling */
  .country-flag {
    width: 24px;
    height: auto;
    vertical-align: middle;
    filter: saturate(1.2);
    transition: all 0.2s ease;
    border: 1px solid rgba(59, 130, 246, 0.2);
    border-radius: 2px;
  }
  
  /* Active item has more vibrant flag */
  #country-list li:hover .country-flag {
    border-color: rgba(59, 130, 246, 0.4);
    filter: saturate(1.3) brightness(1.05);
  }
  
  #country-list li.active .country-flag {
    border-color: rgba(59, 130, 246, 0.5);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
    filter: saturate(1.5) brightness(1.1);
  }
  
  /* Region styling (groups of countries) */
  #country-list li.region {
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    margin-top: 0.5rem;
    padding-top: 1rem;
  }
  
  #country-list li.region .country-code {
    background-color: rgba(59, 130, 246, 0.1);
  }
  
  /* Benefits container animations */
  .country-benefits {
    opacity: 0;
    transform: translateY(10px);
    transition: opacity 0.3s ease, transform 0.3s ease;
  }
  
  .country-benefits:not(.hidden) {
    opacity: 1;
    transform: translateY(0);
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    #country-list li.active::after {
      display: none;
    }
    
    .benefits-layout {
      flex-direction: column;
    }
    
    .country-sidebar {
      margin-bottom: 1.5rem;
    }
    
    /* Show countries in a horizontal scrollable list on mobile */
    #country-list {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      justify-content: flex-start;
    }
    
    #country-list li {
      flex: 0 0 auto;
      width: auto;
      margin-bottom: 0.5rem;
    }
    
    /* Stack countries differently on very small screens */
    @media (max-width: 480px) {
      #country-list {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 0.5rem;
      }
    }
  }
</style>

<script>
  // Country data type
  interface Country {
    code: string;
    name: string;
    flag: string;
    region?: boolean;
  }

  document.addEventListener('DOMContentLoaded', () => {
    const benefitsContainer = document.getElementById('benefits-container');
    const countryBenefits = document.querySelectorAll('.country-benefits');
    const defaultBenefits = document.getElementById('default-benefits');
    const countrySearch = document.getElementById('country-search') as HTMLInputElement;
    const countryList = document.getElementById('country-list');
    
    // Countries data with two-letter country codes
    const countries: Country[] = [
      { code: 'germany', name: 'Germany', flag: 'DE' },
      { code: 'france', name: 'France', flag: 'FR' },
      { code: 'poland', name: 'Poland', flag: 'PL' },
      { code: 'spain', name: 'Spain', flag: 'ES' },
      { code: 'italy', name: 'Italy', flag: 'IT' },
      { code: 'sweden', name: 'Sweden', flag: 'SE' },
      { code: 'ukraine', name: 'Ukraine', flag: 'UA' },
      { code: 'netherlands', name: 'Netherlands', flag: 'NL' },
      { code: 'belgium', name: 'Belgium', flag: 'BE' },
      { code: 'czechia', name: 'Czechia', flag: 'CZ' },
      { code: 'slovakia', name: 'Slovakia', flag: 'SK' },
      { code: 'hungary', name: 'Hungary', flag: 'HU' },
      { code: 'romania', name: 'Romania', flag: 'RO' },
      { code: 'visegrad', name: 'Visegrad Group', flag: 'EU', region: true },
      { code: 'baltics', name: 'Baltic States', flag: 'EU', region: true },
      { code: 'balkans', name: 'Balkan Countries', flag: 'EU', region: true },
      { code: 'southern', name: 'Southern Europe', flag: 'EU', region: true },
      { code: 'northern', name: 'Northern Europe', flag: 'EU', region: true },
      { code: 'central', name: 'Central Europe', flag: 'EU', region: true },
      { code: 'eastern', name: 'Eastern Europe', flag: 'EU', region: true }
    ];

    // Language to country mapping (for browser language detection)
    const languageToCountry: Record<string, string> = {
      'de': 'germany',
      'fr': 'france',
      'pl': 'poland',
      'es': 'spain',
      'it': 'italy',
      'sv': 'sweden',
      'uk': 'ukraine',
      'nl': 'netherlands',
      'cs': 'czechia',
      'sk': 'slovakia',
      'hu': 'hungary',
      'ro': 'romania'
    };
    
    // Returns the suggested country based on browser language
    const getSuggestedCountry = (): Country | null => {
      const browserLang = navigator.language || (navigator as any).userLanguage;
      const langCode = browserLang.split('-')[0].toLowerCase();
      
      if (langCode in languageToCountry) {
        const countryCode = languageToCountry[langCode];
        return countries.find(c => c.code === countryCode) || null;
      }
      return null;
    };
    
    // Show country benefits and update UI
    const showCountryBenefits = (countryCode: string, countryName?: string) => {
      // Hide all benefits sections
      countryBenefits.forEach(section => {
        section.classList.add('hidden');
      });
      
      // Show specific country benefits or default if not found
      const targetSection = document.getElementById(`${countryCode}-benefits`);
      if (targetSection) {
        targetSection.classList.remove('hidden');
      } else if (defaultBenefits) {
        defaultBenefits.classList.remove('hidden');
        
        // Get proper country name
        let displayName = countryName || countryCode.charAt(0).toUpperCase() + countryCode.slice(1);
        
        // Update the title to show selected country
        const defaultTitle = defaultBenefits.querySelector('h2');
        if (defaultTitle) {
          defaultTitle.textContent = `Benefits for ${displayName}`;
        }
      }
      
      // Update active tab
      const tabs = document.querySelectorAll<HTMLElement>('#country-list li');
      tabs.forEach(tab => {
        tab.classList.remove('active');
        if (tab.getAttribute('data-country-code') === countryCode) {
          tab.classList.add('active');
          // Ensure the active tab is visible in the scrollable container
          tab.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        }
      });
    };
    
    // Create a country tab element
    const createCountryTab = (country: Country, isSuggested = false): HTMLLIElement => {
      const li = document.createElement('li');
      
      const classes: string[] = [];
      
      // Add different classes based on country type
      if (isSuggested) {
        classes.push('suggested');
      }
      
      if (country.region) {
        classes.push('region');
      }
      
      li.className = classes.join(' ');
      li.setAttribute('data-country-code', country.code);
      li.setAttribute('data-country-name', country.name);
      
      // Use image flags from Flagcdn.com
      const getFlagImage = (countryCode: string) => {
        if (country.region) return 'EU';
        return countryCode.toUpperCase();
      };
      
      const flagCode = getFlagImage(country.flag);
      
      // Force a table-like layout with explicit spacing
      li.innerHTML = `
        <table class="country-table">
          <tr>
            <td class="flag-cell">
              <img 
                src="https://flagcdn.com/w20/${flagCode.toLowerCase()}.png" 
                srcset="https://flagcdn.com/w40/${flagCode.toLowerCase()}.png 2x" 
                alt="${country.name} flag"
                class="country-flag"
              >
            </td>
            <td class="spacer-cell"></td>
            <td class="name-cell">
              ${country.name}
            </td>
          </tr>
        </table>
      `;
      
      li.addEventListener('click', () => {
        showCountryBenefits(country.code, country.name);
      });
      
      return li;
    };
    
    // Initialize the countries list once at startup
    const initializeCountryList = () => {
      if (!countryList) return;
      
      // Get the suggested country based on browser language
      const suggestedCountry = getSuggestedCountry();
      
      // Sort countries - suggested first, then non-regions, then regions alphabetically
      const sortedCountries = [...countries].sort((a, b) => {
        // Put suggested country first
        if (suggestedCountry) {
          if (a.code === suggestedCountry.code) return -1;
          if (b.code === suggestedCountry.code) return 1;
        }
        
        // Next sort by region status (non-regions first)
        if ((a.region && !b.region) || (!a.region && b.region)) {
          return a.region ? 1 : -1;
        }
        
        // Then alphabetically
        return a.name.localeCompare(b.name);
      });
      
      // Add all countries to the list
      sortedCountries.forEach(country => {
        // Check if this country is the suggested one
        const isSuggested = suggestedCountry && country.code === suggestedCountry.code ? true : false;
        const tab = createCountryTab(country, isSuggested);
        
        // If this is the suggested country, mark it as active
        if (isSuggested) {
          tab.classList.add('active');
          
          // Also show its benefits
          showCountryBenefits(country.code, country.name);
        }
        
        countryList.appendChild(tab);
      });
    };
    
    // Filter the countries list without recreating it
    const filterCountryList = (searchTerm = '') => {
      if (!countryList) return;
      
      // Get all country tabs
      const tabs = countryList.querySelectorAll<HTMLElement>('li');
      
      // Normalize search term
      const normalizedSearchTerm = searchTerm.trim().toLowerCase();
      
      // If search term is empty, remove all filter classes
      if (normalizedSearchTerm === '') {
        tabs.forEach(tab => {
          tab.classList.remove('matches-filter');
        });
        return;
      }
      
      // Count how many items match the search term
      let matchCount = 0;
      let lastMatchedTab: HTMLElement | null = null;
      
      // Filter the existing tabs
      tabs.forEach(tab => {
        const countryName = tab.getAttribute('data-country-name') || '';
        const matches = countryName.toLowerCase().includes(normalizedSearchTerm);
        
        if (matches) {
          tab.classList.add('matches-filter');
          matchCount++;
          lastMatchedTab = tab;
        } else {
          tab.classList.remove('matches-filter');
        }
      });
      
      // If only one item matches and it's not already active, select it automatically
      if (matchCount === 1 && lastMatchedTab) {
        // TypeScript thinks lastMatchedTab could be null at this point, but we just checked above
        // We need to tell TypeScript that lastMatchedTab is definitely an HTMLElement
        const tab = lastMatchedTab as HTMLElement;
        
        if (!tab.classList.contains('active')) {
          const countryCode = tab.getAttribute('data-country-code') || '';
          const countryName = tab.getAttribute('data-country-name') || '';
          
          if (countryCode) {
            // Wait a moment to show the highlighting before switching
            setTimeout(() => {
              if (countrySearch && countrySearch.value.trim().toLowerCase() === normalizedSearchTerm) {
                showCountryBenefits(countryCode, countryName);
              }
            }, 300);
          }
        }
      }
    };
    
    // Handle search functionality
    if (countrySearch) {
      countrySearch.addEventListener('input', (e) => {
        const target = e.target as HTMLInputElement;
        filterCountryList(target.value);
      });
      
      // Clear search when clicking the X button (on supported browsers)
      countrySearch.addEventListener('search', () => {
        filterCountryList(countrySearch.value);
      });
    }
    
    // Initialize the country list once at startup
    initializeCountryList();
  });
</script>