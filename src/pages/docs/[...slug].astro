---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  try {
    // Get all docs from the collection
    const allDocs = await getCollection('docs', (doc) => {
      // Filter out drafts in production
      return import.meta.env.DEV || !doc.data.draft;
    });
    
    // Create a mapping for easy lookup
    const allPaths = [];
    
    // Log all documents for debugging purposes
    console.log("All documents in docs collection:");
    
    // Add all documents to the paths array
    allDocs.forEach(entry => {
      console.log(`- ${entry.slug} (${entry.id})`);
      
      // Generate a path for this document based on its file slug
      allPaths.push({
        params: { slug: entry.slug },
        props: { entry }
      });
      
      // If document has a customSlug, generate an additional path
      if (entry.data.customSlug && entry.data.customSlug !== entry.slug) {
        console.log(`  - Custom slug: ${entry.data.customSlug}`);
        allPaths.push({
          params: { slug: entry.data.customSlug },
          props: { entry }
        });
      }
    });
    
    console.log(`Generated ${allPaths.length} paths`);
    return allPaths;
  } catch (error) {
    console.error("Error generating static paths:", error);
    return [];
  }
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.title}>
  <div class="bg-gray-900 min-h-screen">
    <main class="container mx-auto max-w-6xl px-4 py-8">
      <div class="mb-8">
        <a href="/docs/all" class="text-blue-400 hover:text-blue-300 flex items-center gap-2 mb-4">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
          </svg>
          Back to Overview
        </a>
        <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">{entry.data.title}</h1>
        {entry.data.description && <p class="text-xl text-gray-300 mb-8">{entry.data.description}</p>}
      </div>
      
      <div class="relative">
        <div class="absolute inset-0 bg-gradient-to-b from-blue-900/20 to-transparent opacity-50 blur-xl"></div>
        <article class="relative prose prose-lg max-w-none dark:prose-invert prose-headings:text-white prose-headings:font-bold prose-p:text-gray-300 prose-a:text-blue-400 prose-a:no-underline hover:prose-a:underline prose-strong:text-white prose-code:text-blue-300 prose-pre:bg-gray-800 prose-pre:text-gray-300 prose-li:text-gray-300">
          <Content />
        </article>
      </div>
      
      <div class="mt-16 pt-8 border-t border-gray-800">
        <div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
          <p class="text-gray-400 text-sm">
            Tags: {entry.data.tags || "None"}
          </p>
          
          <div class="flex items-center gap-4">
            <a href="/docs/all" class="text-blue-400 hover:text-blue-300 flex items-center gap-2">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
              </svg>
              All Topics
            </a>
          </div>
        </div>
      </div>
    </main>
  </div>
</Layout>