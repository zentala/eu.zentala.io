---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import DisplayTitle from '../../components/DisplayTitle.astro';

// Get all summaries
const allSummaries = await getCollection('summaries', ({ data }) => {
  return !data.draft;
});

// Sort by source date (most recent first)
const sortedSummaries = [...allSummaries].sort((a, b) => {
  // Default dates if not available
  const dateA = a.data.sourceDate ? new Date(a.data.sourceDate) : new Date(0);
  const dateB = b.data.sourceDate ? new Date(b.data.sourceDate) : new Date(0);
  return dateB.getTime() - dateA.getTime();
});

// Group by source type
const summariesByType = sortedSummaries.reduce((acc, summary) => {
  const type = summary.data.sourceType;
  if (!acc[type]) {
    acc[type] = [];
  }
  acc[type].push(summary);
  return acc;
}, {} as Record<string, typeof sortedSummaries>);

// Helper function to format date
function formatDate(dateString: string | undefined): string {
  if (!dateString) return '';
  try {
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
    });
  } catch (e) {
    return dateString;
  }
}
---

<Layout title="EU Reform Vision - Content Summaries">
  <main class="container mx-auto max-w-6xl px-4 py-8">
    <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">Content Summaries</h1>
    
    <div class="mb-12">
      <p class="text-xl text-gray-300 max-w-3xl">
        AI-generated summaries of important videos, articles, and other content related to European reform and integration. 
        These summaries provide key insights from lengthy content in a concise, accessible format.
      </p>
    </div>
    
    <!-- Top featured summaries -->
    <div class="mb-16">
      <h2 class="text-2xl font-bold text-white mb-6 border-b border-gray-800 pb-2">Featured Summaries</h2>
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        {sortedSummaries.slice(0, 2).map(summary => (
          <a href={`/summaries/${summary.slug}`} class="group">
            <div class="bg-gray-800/30 border border-gray-700/50 hover:border-blue-600/50 rounded-xl overflow-hidden transition-all h-full flex flex-col">
              {summary.data.coverImage || (summary.data.sourceType === 'youtube' && summary.data.sourceId) ? (
                <div class="w-full aspect-video bg-gray-900 overflow-hidden">
                  <img 
                    src={summary.data.coverImage || `https://img.youtube.com/vi/${summary.data.sourceId}/maxresdefault.jpg`}
                    alt={summary.data.title}
                    class="w-full h-full object-cover transition-transform group-hover:scale-105"
                  />
                </div>
              ) : (
                <div class="w-full aspect-video bg-gradient-to-br from-blue-900/40 to-gray-900/40"></div>
              )}
              
              <div class="p-6 flex-grow flex flex-col">
                <div class="mb-3 flex items-center">
                  <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                    summary.data.sourceType === 'youtube' ? 'bg-red-900/20 text-red-400' :
                    summary.data.sourceType === 'article' ? 'bg-blue-900/20 text-blue-400' :
                    summary.data.sourceType === 'podcast' ? 'bg-purple-900/20 text-purple-400' :
                    'bg-gray-800 text-gray-400'
                  }`}>
                    {summary.data.sourceType === 'youtube' ? 'YouTube' : summary.data.sourceType}
                  </span>
                  
                  {summary.data.sourceDate && (
                    <span class="text-gray-500 text-xs ml-2">
                      {formatDate(summary.data.sourceDate)}
                    </span>
                  )}
                </div>
                
                <h3 class="text-xl font-semibold text-white mb-2 group-hover:text-blue-400 transition-colors">
                  {summary.data.title}
                </h3>
                
                <p class="text-gray-400 text-sm mb-4 line-clamp-2 flex-grow">
                  {summary.data.description}
                </p>
                
                <div class="flex justify-between items-center pt-2 mt-auto">
                  <span class="text-blue-400 text-sm">Read summary</span>
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-blue-400 group-hover:translate-x-1 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
                  </svg>
                </div>
              </div>
            </div>
          </a>
        ))}
      </div>
    </div>
    
    <!-- Summaries by category -->
    {Object.entries(summariesByType).map(([type, summaries]) => (
      <div class="mb-12">
        <h2 class="text-2xl font-bold text-white mb-6 border-b border-gray-800 pb-2 flex items-center">
          <span class="mr-2">
            {type === 'youtube' ? (
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-red-500" fill="currentColor" viewBox="0 0 24 24">
                <path d="M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z"/>
              </svg>
            ) : type === 'article' ? (
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1M19 20a2 2 0 002-2V8a2 2 0 00-2-2h-5M8 10h4M8 14h4M8 18h4" />
              </svg>
            ) : type === 'podcast' ? (
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-purple-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z" />
              </svg>
            ) : (
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
              </svg>
            )}
          </span>
          {type === 'youtube' ? 'YouTube' : type.charAt(0).toUpperCase() + type.slice(1)} Content
        </h2>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          {summaries.map(summary => (
            <a href={`/summaries/${summary.slug}`} class="group">
              <div class="bg-gray-800/30 border border-gray-700/50 hover:border-blue-600/50 rounded-lg overflow-hidden transition-all h-full flex flex-col">
                {summary.data.coverImage || (summary.data.sourceType === 'youtube' && summary.data.sourceId) ? (
                  <div class="w-full aspect-video bg-gray-900 overflow-hidden">
                    <img 
                      src={summary.data.coverImage || `https://img.youtube.com/vi/${summary.data.sourceId}/maxresdefault.jpg`}
                      alt={summary.data.title}
                      class="w-full h-full object-cover transition-transform group-hover:scale-105"
                    />
                  </div>
                ) : (
                  <div class="w-full aspect-video bg-gradient-to-br from-blue-900/40 to-gray-900/40"></div>
                )}
                
                <div class="p-5 flex-grow flex flex-col">
                  {summary.data.sourceDate && (
                    <span class="text-gray-500 text-xs mb-2">
                      {formatDate(summary.data.sourceDate)}
                    </span>
                  )}
                  
                  <h3 class="text-lg font-semibold text-white mb-2 group-hover:text-blue-400 transition-colors line-clamp-2">
                    {summary.data.title}
                  </h3>
                  
                  <p class="text-gray-400 text-sm mb-4 line-clamp-2 flex-grow">
                    {summary.data.description}
                  </p>
                  
                  <div class="flex justify-between items-center pt-2 mt-auto">
                    <span class="text-blue-400 text-sm">Read summary</span>
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-blue-400 group-hover:translate-x-1 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
                    </svg>
                  </div>
                </div>
              </div>
            </a>
          ))}
        </div>
      </div>
    ))}
    
    <!-- AI generation info -->
    <div class="mt-16 text-center">
      <div class="inline-block bg-gray-800/50 rounded-xl border border-gray-700/50 px-8 py-4">
        <p class="text-gray-400 text-sm">
          These summaries are generated by AI based on the original content and are provided for informational purposes.
          <br/>
          For complete and authoritative information, please refer to the original sources.
        </p>
      </div>
    </div>
  </main>
</Layout>