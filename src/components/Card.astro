---
interface Props {
	icon?: string;
	title: string;
	color?: string;
}

const { icon, title, color } = Astro.props;

// Dynamically determine background color
let bgColorClass = "bg-gray-800";
let hoverColorClass = "hover:bg-gray-700";
let borderColorClass = "border-gray-700";

if (color === "blue") {
  bgColorClass = "bg-blue-900";
  hoverColorClass = "hover:bg-blue-800";
  borderColorClass = "border-blue-700";
} else if (color === "green") {
  bgColorClass = "bg-green-900";
  hoverColorClass = "hover:bg-green-800";
  borderColorClass = "border-green-700";
} else if (color === "red") {
  bgColorClass = "bg-red-900";
  hoverColorClass = "hover:bg-red-800";
  borderColorClass = "border-red-700";
} else if (color === "yellow") {
  bgColorClass = "bg-yellow-900";
  hoverColorClass = "hover:bg-yellow-800";
  borderColorClass = "border-yellow-700";
} else if (color === "indigo") {
  bgColorClass = "bg-indigo-900";
  hoverColorClass = "hover:bg-indigo-800";
  borderColorClass = "border-indigo-700";
} else if (color === "purple") {
  bgColorClass = "bg-purple-900";
  hoverColorClass = "hover:bg-purple-800";
  borderColorClass = "border-purple-700";
} else if (color === "teal") {
  bgColorClass = "bg-teal-900";
  hoverColorClass = "hover:bg-teal-800";
  borderColorClass = "border-teal-700";
}
---

<article class={`card flex flex-col gap-4 m-4 p-8 border ${borderColorClass} ${bgColorClass} ${hoverColorClass} rounded-xl shadow-lg transition-all duration-300 hover:shadow-xl transform hover:scale-[1.02] text-white h-full`}>
	<h3 class="title flex font-bold text-2xl leading-snug gap-4 items-center mb-4">
		{icon && <span class="text-3xl">{icon}</span>}
		<span set:html={title} />
	</h3>
	<div class="body text-gray-300 text-lg">
		<slot />
	</div>
</article>
