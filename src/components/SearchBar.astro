---
interface Props {
  placeholder?: string;
}

const { placeholder = "Search the vision..." } = Astro.props;
---

<div class="search-container relative max-w-xl mx-auto">
  <div class="relative">
    <input 
      type="search" 
      id="site-search" 
      placeholder={placeholder}
      class="w-full px-4 py-3 pl-12 rounded-lg bg-gray-800/80 border border-gray-700 text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
    />
    <div class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
      </svg>
    </div>
  </div>
  
  <!-- Placeholder for search results -->
  <div id="search-results" class="absolute z-10 w-full mt-2 bg-gray-800 border border-gray-700 rounded-lg shadow-lg hidden">
    <!-- Search results will be dynamically populated here -->
    <div class="p-4 text-gray-300 text-center">
      <p>Search functionality coming soon!</p>
      <p class="text-sm">We're working on implementing Algolia search.</p>
    </div>
  </div>
</div>

<script>
  // Basic functionality to show/hide the search results placeholder
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('site-search');
    const searchResults = document.getElementById('search-results');
    
    if (searchInput && searchResults) {
      searchInput.addEventListener('focus', () => {
        searchResults.classList.remove('hidden');
      });
      
      searchInput.addEventListener('blur', () => {
        // Delayed hide to allow clicking on results
        setTimeout(() => {
          searchResults.classList.add('hidden');
        }, 200);
      });
    }
  });
</script>