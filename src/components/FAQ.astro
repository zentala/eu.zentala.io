---
interface FAQItem {
  question: string;
  answer: string;
}

interface Props {
  items: FAQItem[];
  title?: string;
  color?: string;
}

const { items, title = "Frequently Asked Questions", color = "blue" } = Astro.props;

// Dynamically determine background color
let bgColorClass = "bg-gray-800/30";
let borderColorClass = "border-gray-700/50";
let questionColorClass = "bg-gray-800/50";
let questionHoverClass = "hover:bg-gray-700/70";

if (color === "blue") {
  bgColorClass = "bg-blue-900/30";
  borderColorClass = "border-blue-700/50";
  questionColorClass = "bg-blue-900/50";
  questionHoverClass = "hover:bg-blue-800/70";
} else if (color === "indigo") {
  bgColorClass = "bg-indigo-900/30";
  borderColorClass = "border-indigo-700/50";
  questionColorClass = "bg-indigo-900/50";
  questionHoverClass = "hover:bg-indigo-800/70";
} else if (color === "purple") {
  bgColorClass = "bg-purple-900/30";
  borderColorClass = "border-purple-700/50";
  questionColorClass = "bg-purple-900/50";
  questionHoverClass = "hover:bg-purple-800/70";
}
---

<div class={`faq-container ${bgColorClass} border ${borderColorClass} rounded-xl p-6 shadow-lg my-8`}>
  {title && <h2 class="text-3xl font-bold text-white mb-6">{title}</h2>}
  
  <div class="space-y-4">
    {items.map((item, index) => (
      <div class="faq-item">
        <details class="group">
          <summary class={`flex justify-between items-center font-medium cursor-pointer p-4 rounded-lg ${questionColorClass} ${questionHoverClass} text-white transition-all duration-300`}>
            <span class="text-xl">{item.question}</span>
            <span class="transition-transform duration-300 group-open:rotate-180">
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5"></path>
              </svg>
            </span>
          </summary>
          <div class="text-gray-300 mt-3 group-open:animate-fadeIn px-4 pb-4 text-lg">
            <p set:html={item.answer}></p>
          </div>
        </details>
      </div>
    ))}
  </div>
</div>

<style>
  details > summary {
    list-style: none;
  }
  details > summary::-webkit-details-marker {
    display: none;
  }
  
  @keyframes fadeIn {
    0% { opacity: 0; transform: translateY(-10px); }
    100% { opacity: 1; transform: translateY(0); }
  }
  
  .group-open .animate-fadeIn {
    animation: fadeIn 0.5s ease-in-out;
  }
</style>